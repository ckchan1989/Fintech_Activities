Day 3

Linear regression

from sklearn.linear_model import LinearRegression
sklearn is scilearn - as important as numpy

your X value needs reshaping to double dimenssinal data

X = df.column.values.reshape(-1,1)

model = LinearRegression()

model.fit(X,y)

y = mx+b

b = model.intercept_   y intercept
m = model.coef_   slope



mean_squared_error and r2_score most used ones for our purposes
from sklearn.metrics import mean_squared_error, r2_score

score = model.score(X, y, sample_weight=None)
best score value is 100%

r2 score 
0 to 1 - closer to 1 is the better. Anything greater than .75 is good r2 value

mse = mean_squared_error(y, predicted_y_values) what's the squared error mean - error being the difference between the linear regression line and actual numbers
The lower the better

Same for RMSE - lower the better

Overfit - where we fit the model too well
ideal is sloped line is good

Parsimony - when two models perform simiarly, used the simpler one



rolling out of sample approach - creating small windows to test 
